@page "/Risks"
@inject RiskService riskService
@inject NavigationManager NavigationManager


<h1>List of risks</h1>

@if (RiskList is null)
{
    <p><em>Loading...</em></p>
}
else
{

 <button class="btn btn-primary" @onclick="() => OnAddClicked()">Add new</button>

    <BlazmGrid Data="RiskList" PageSize="10"  Sortable="true" >
    <GridColumns>
        <GridColumn Field="@nameof(RiskEntity.Id)"></GridColumn>
        <GridColumn Field="@nameof(RiskEntity.Name)"  CanFilter="true" ></GridColumn>
        <GridColumn Field="@nameof(RiskEntity.Category)"  CanFilter="true"></GridColumn>
        <GridColumn>
    <Template>
   
        <button class="btn btn-primary" @onclick="() => OnDetailClicked(context as RiskEntity)">Detail</button>
        <button class="btn btn-danger" @onclick="() => OnDeleteClicked(context as RiskEntity)"><i class="far fa-trash-alt"></i></button>
    </Template>
    </GridColumn>


    </GridColumns>
</BlazmGrid>

   
}


@code {
    private List<RiskEntity> RiskList;
    private RiskEntity Risk;

    private void OnDetailClicked(RiskEntity context)
    {
         NavigationManager.NavigateTo($"EditRisk/{context.Id}");

    }
    private void OnDeleteClicked(RiskEntity context)
    {
         NavigationManager.NavigateTo($"Delete/{context.Id}");

    }
    private void OnAddClicked()
    {
         NavigationManager.NavigateTo("AddRisk");

    }

    protected override async Task OnInitializedAsync()
    {
        RiskList = await riskService.GetAllRisksAsync();
     
    }
}